//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClient.LogConverterService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogConverterService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromFile", ReplyAction="http://tempuri.org/IService/ParseFromFileResponse")]
        string[][] ParseFromFile(string[] value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromFile", ReplyAction="http://tempuri.org/IService/ParseFromFileResponse")]
        System.Threading.Tasks.Task<string[][]> ParseFromFileAsync(string[] value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromFileCustom", ReplyAction="http://tempuri.org/IService/ParseFromFileCustomResponse")]
        string[][] ParseFromFileCustom(string[] value, string parser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromFileCustom", ReplyAction="http://tempuri.org/IService/ParseFromFileCustomResponse")]
        System.Threading.Tasks.Task<string[][]> ParseFromFileCustomAsync(string[] value, string parser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromURI", ReplyAction="http://tempuri.org/IService/ParseFromURIResponse")]
        string[][] ParseFromURI(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromURI", ReplyAction="http://tempuri.org/IService/ParseFromURIResponse")]
        System.Threading.Tasks.Task<string[][]> ParseFromURIAsync(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromURICustom", ReplyAction="http://tempuri.org/IService/ParseFromURICustomResponse")]
        string[][] ParseFromURICustom(string uri, string parser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ParseFromURICustom", ReplyAction="http://tempuri.org/IService/ParseFromURICustomResponse")]
        System.Threading.Tasks.Task<string[][]> ParseFromURICustomAsync(string uri, string parser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAlarms", ReplyAction="http://tempuri.org/IService/GetAlarmsResponse")]
        string[] GetAlarms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAlarms", ReplyAction="http://tempuri.org/IService/GetAlarmsResponse")]
        System.Threading.Tasks.Task<string[]> GetAlarmsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TestClient.LogConverterService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TestClient.LogConverterService.IService>, TestClient.LogConverterService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[][] ParseFromFile(string[] value) {
            return base.Channel.ParseFromFile(value);
        }
        
        public System.Threading.Tasks.Task<string[][]> ParseFromFileAsync(string[] value) {
            return base.Channel.ParseFromFileAsync(value);
        }
        
        public string[][] ParseFromFileCustom(string[] value, string parser) {
            return base.Channel.ParseFromFileCustom(value, parser);
        }
        
        public System.Threading.Tasks.Task<string[][]> ParseFromFileCustomAsync(string[] value, string parser) {
            return base.Channel.ParseFromFileCustomAsync(value, parser);
        }
        
        public string[][] ParseFromURI(string uri) {
            return base.Channel.ParseFromURI(uri);
        }
        
        public System.Threading.Tasks.Task<string[][]> ParseFromURIAsync(string uri) {
            return base.Channel.ParseFromURIAsync(uri);
        }
        
        public string[][] ParseFromURICustom(string uri, string parser) {
            return base.Channel.ParseFromURICustom(uri, parser);
        }
        
        public System.Threading.Tasks.Task<string[][]> ParseFromURICustomAsync(string uri, string parser) {
            return base.Channel.ParseFromURICustomAsync(uri, parser);
        }
        
        public string[] GetAlarms() {
            return base.Channel.GetAlarms();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAlarmsAsync() {
            return base.Channel.GetAlarmsAsync();
        }
    }
}
